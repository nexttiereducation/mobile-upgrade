// http://ionicframework.com/docs/v2/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 300;
  src: local("Material Icons"), local("MaterialIcons-Regular"), url("../assets/fonts/MaterialIcons-Regular.ttf") format("ttf");
}

@import "../theme/icons";

hr {
  height: 1px !important;
}

ion-icon.icon-60 {
  font-size: 6rem;
  line-height: 1;
}

[margin-10] {
  margin: 10px;
}

[padding-8] {
  padding: 8px;
}

[padding-10] {
  padding: 10px;
}

[padding-vertical-light] {
  padding: 8px 0px;
}

.align-center {
  align-items: center;
}

.avatar-shadow {
  border-radius: 50%;
  box-shadow: transparentize(var(--black), 0.82) 0px 0px 2px, transparentize(var(--black), 0.74) 0px 2.75px 1.5px;
  overflow: hidden;

  &img {
    object-fit: contain;
    width: 38px;
    height: 38px;
  }
}

.avatar-title {
  &:not(.not-centered)>.toolbar-title.toolbar-title-md {
    justify-content: center;
  }

  >.toolbar-title.toolbar-title-md {
    align-items: center;
    display: flex;
    flex: 0 1 100%;
    flex-direction: row;
    height: 100%;
    line-height: 1.15;
    max-width: 100%;

    ion-avatar {
      align-items: center;
      display: flex;
      flex: 0 0 38px;
      flex-direction: column;
      justify-content: center;
    }
  }

  .toolbar-title.toolbar-title-ios {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
}

.avatar-title-text {
  flex-direction: column;
  display: flex;
  justify-content: center;
  margin-left: 2px;
  max-width: calc(100% - 50px);

  > :first-child {
    margin-bottom: 2px;
    line-height: 1.1;
  }
}

.chip-list {
  padding-left: 20px !important;
  min-height: unset !important;

  .tinyHeader {
    text-align: left;
    color: var(--black);
    margin-bottom: 10px;

    &:not(:first-child) {
      margin-top: 10px;
    }
  }

  ion-chip ion-label {
    font-weight: 700;
  }
}

.chips {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin-right: -5px !important;

  ion-chip {
    margin-right: 5px !important;
  }
}

.flex {
  flex: 1 1 auto;
  display: flex;

  &.fill {
    height: 100%;
    width: 100%;
  }

  &.center.center {
    align-items: center;
    justify-content: center;
  }

  &.column {
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
  }
}

.flex-column {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
}

.flex-grow {
  flex: 1 0 auto;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-fill {
  display: flex;
  flex: 0 1 100%;
  height: 100%;
}

.gray-sections {
  padding-bottom: 15px;
  background-color: var(--white);

  &:not(.no-headers) {
    >*:nth-child(even) {
      background-color: var(--grayLightest-1);
      min-height: 124px;
    }

    >*:nth-child(odd) {
      background-color: var(--white);
      padding: 12px 20px;
      font-size: 1.1em;
      font-weight: 500;
    }
  }

  &.no-headers>* {
    background-color: var(--grayLightest-1);
  }

  >div.body {
    padding: 16px 20px;
    min-height: unset !important;
  }

  ion-grid {
    padding: 0 !important;
  }

  ion-row.row {
    min-height: 124px;
    position: relative;
    border-bottom: 1px solid white;

    &[justify-content-start] ion-col.col {
      justify-content: start;
    }
  }

  ion-col.col {
    height: 100%;
    min-height: 124px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    &:not(:last-of-type) {
      border-right: 1px solid white;
    }

    .tinyHeader {
      padding-top: 5px;

      +.displayHeader {
        padding-top: 14px;
      }

      +img {
        max-height: 75px;
      }
    }

    .displayHeader+.body {
      padding-top: 2px;
    }

    img {
      &:first-child {
        max-height: 85px;

        &:last-child {
          max-height: 90px;
        }
      }

      &:not(.avatar-shadow) {
        width: auto;
        max-width: 100%;
      }

      max-height: 60px;
      display: block;
    }

    >a:first-child:last-child {
      min-height: 108px;
      padding: 0 4px;

      .button-inner {
        flex-direction: column;
        text-transform: none;
      }

      img {
        max-height: 70px;
        // margin: 2.5px 0;
      }
    }
  }

  ion-slides,
  .swiper-container {
    min-height: 104px;
  }

  ion-slides {
    .swiper-slide {
      align-items: flex-start;
    }

    .swiper-pagination-fraction,
    .swiper-pagination-custom,
    .swiper-container-horizontal>.swiper-pagination-bullets {
      bottom: 0;
    }
  }

  ion-range {
    &.range-disabled {
      opacity: 1 !important;
      padding: 16px;

      &.range-md {
        .range-knob {
          display: none;
        }

        .range-pin {
          line-height: 15px;
        }
      }
    }

    ion-label.label {
      color: var(--gray);
      font-weight: bold;
      font-size: 1.2rem;
      position: absolute;
      top: 30px;

      &[range-right] {
        right: 15px;
      }
    }
  }
}

.grey-disabled {
  @extend .text-steel50;
  opacity: 1;
}

.height-100 {
  height: 100%;
}

.width-100 {
  width: 100%;
}

.no-min-height {
  min-height: unset !important;
}

button.button-md.no-caps .button-inner {
  text-transform: none;
}

.secret-submit {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;

  &.fit {
    max-width: 100%;
  }
}

button.datepicker.button-md.item-button[item-start] {
  margin: 0 0 0 -8px;
  height: 40px;
  padding: 9px 8px;
  border-radius: 50%;
  width: 40px;
}

// ------------------- TYPOGRAPHY -------------------
body,
html {
  font-family: "Roboto";
}

.displayHeader {
  font-size: 3rem;
  font-weight: bold;
  text-align: center;
  color: var(--blue);
}

.displayTitle {
  font-size: 2rem;
  line-height: 1.2;
  font-weight: bold;
}

.surveyQuestion {
  @extend .displayTitle;
  letter-spacing: -0.25px;
  color: var(--black) !important;
  white-space: normal;

  &.small {
    font-size: 1.6rem;
  }
}

.emptyStateTitle {
  font-size: 1.8rem;
  font-weight: bold;
}

.snackbar {
  font-size: 1.7rem;
  color: var(--white);

  &.undo {
    font-weight: bold;
  }
}

.topbar {
  font-size: 1.6rem;

  &.title {
    text-align: center;
    color: var(--black);
  }

  &.action {
    font-weight: 500;
    text-align: "right";
    color: var(--blue);
  }
}

body,
.body {
  font-size: 1.4rem;
  color: var(--black);

  &.spaced {
    line-height: 1.9rem;

    +.tinyHeader {
      margin-top: 0.5rem;
    }
  }

  &.paragraph {
    white-space: pre-line;
  }

  &.block {
    white-space: normal;
  }
}

.subhead {
  font-size: 1.2rem !important;
  color: var(--grayDark50);
  font-weight: normal;

  ion-icon {
    font-size: 1.2rem;
  }
}

.chartPercentage {
  font-size: 1.2rem;
  font-weight: bold;
  text-align: center;
  color: var(--blue);
}

.actionIcon {
  font-size: 1.2rem !important;
  letter-spacing: -0.29px;
  color: var(--grayDark50) !important;
  text-transform: none;

  &.active {
    color: var(--blue);
  }
}

.tinyHeader {
  @extend .tinyText;
  text-align: center;
  color: var(--blue);
  font-weight: bold;
}

.tinyText {
  font-size: 1rem;
}

.bold {
  font-weight: 700 !important;
}

.medium {
  font-weight: 500;
}

.not-bold {
  font-weight: 400 !important;
}

.italic {
  font-style: italic;
}

.no-caps {
  text-transform: none;
}

.nowrap {
  white-space: nowrap;
}

.uppercase {
  text-transform: uppercase;
}

// ------------------- MIXINS ----------------------
// --- Text Color ---
$textColors: (black: var(--black), blue: (base: var(--blue), transparencies: (50, 100)), grayDark50: var(--grayDark50), green: (base: var(--green), transparencies: (50, 100)), red: var(--red), steel: (base: var(--steel), transparencies: (50, 100)), white: (base: var(--white), transparencies: (50, 70, 100)));

@mixin textColor($colorName, $value) {
  $color: $value;
  $transparencies: 100;

  @if type-of($value)==map {
    $color: map-get($value, base);
    $transparencies: map-get($value, transparencies);
  }

  @each $transparency in $transparencies {
    $className: text-#{$colorName}#{$transparency};

    @if $transparency==100 {
      $className: text-#{$colorName};
    }

    .#{$className} {
      color: transparentize($color, 1 - $transparency / 100) !important;
    }
  }
}

@each $name,
$value in $textColors {
  @include textColor($name, $value);
}

// --- Background Color ---
$bgColors: (blue: (base: var(--blue), transparencies: (10, 50, 100)), gray: var(--gray), grayLight: var(--grayLight), grayLightest: var(--grayLightest), grayLightest-1: var(--grayLightest-1), grayMedium: var(--grayLighter), green: (base: var(--green), transparencies: 10), red: (base: var(--red), transparencies: (10, 100)), steel50: var(--steel50), white: (base: var(--white), transparencies: (10, 50, 100)));

@mixin bgColor($colorName, $value) {
  $color: $value;
  $transparencies: 100;

  @if type-of($value)==map {
    $color: map-get($value, base);
    $transparencies: map-get($value, transparencies);
  }

  @each $transparency in $transparencies {
    $className: bg-#{$colorName}#{$transparency};

    @if $transparency==100 {
      $className: bg-#{$colorName};
    }

    .#{$className} {
      background-color: transparentize($color, 1 - $transparency / 100);
      background: transparentize($color, 1 - $transparency / 100);
    }
  }
}

@each $name,
$value in $bgColors {
  @include bgColor($name, $value);
}

// --- Toast Background Color ---
$toastColors: (blue: var(--blue), green: var(--green), red: var(--red));

@mixin toast($colorName, $color) {
  &.toast-#{$colorName} .toast-wrapper {
    background-color: $color !important;
  }
}

ion-toast {

  @each $name,
  $color in $toastColors {
    @include toast($name, $color);
  }
}

// ------------------- OVERRIDES -------------------
a {
  &[ion-button] {
    &.bar-button-md[icon-only]>.button-inner>ion-icon {
      padding: 0 0.5em;
    }
  }

  &.button,
  &.button button-inner {
    text-decoration: none;
  }
}

button {
  &.swiper-pagination-bullet {
    height: 5px;
    width: 5px;

    &.swiper-pagination-bullet-active {
      background: var(--blue);
    }

    &:first-of-type:last-of-type {
      display: none;
    }
  }

  &.button-md .button-inner {

    ion-icon,
    ion-icon::before,
    ion-icon.star-remove::after {
      line-height: 100%;
    }
  }

  &.button-clear-md-grayDark50 ion-icon.star-remove::after {
    color: #9f9f9f;
  }

  &.bar-button-menutoggle-md {

    &[start],
    &[left],
    &[end],
    &[right] {
      margin: 0 6px;
      min-width: 44px;
    }
  }

  &.lowercase span.button-inner {
    text-transform: none;
  }

  &[icon-only] ion-badge {
    position: absolute;
    top: 0;
    right: 0.3rem;

    &~ion-icon {
      margin-right: 1.2rem;
    }
  }
}

img-loader {
  background-size: cover !important;
  background-position: center center;
}

ion-badge.badge {
  padding: 3px 6px;
}

ion-checkbox.checkbox-md {
  .checkbox-checked .checkbox-inner {
    width: 7px;
    height: 15px;
    left: 5px;
    top: -1px;
  }

  &.boxless {
    .checkbox-icon {
      border-color: transparent;
      background-color: transparent;

      &.checkbox-checked {
        border-color: transparent;
        background-color: transparent;

        .checkbox-inner {
          border-color: var(--blue);
        }
      }
    }
  }
}

ion-chip.chip-md {
  ion-icon.icon-md {
    width: 25px;
    height: 25px;
    font-size: 1.6rem;
    line-height: 25px;

    &::before {
      font-size: unset;
      text-align: center;
      width: 25px;
      line-height: 25px;
      display: block;
    }
  }
}

ion-datetime {
  &[required].ng-valid .button-inner {
    border-bottom: 2px solid #32db64;
  }

  >button.item-cover {
    padding: 2px 0 0 41px;
  }
}

ion-footer.footer-md {
  ion-toolbar.toolbar {
    &:last-child {
      align-items: flex-start;
    }

    .toolbar-content {
      height: 55px;

      >button:first-child:last-child,
      .file-input+button {
        height: 95%;
        margin: 0;
      }
    }
  }

  &.no-border::before {
    background-image: none;
  }
}

ion-grid {
  ion-col ion-select {
    min-height: 41px;
  }
}

ion-header {
  &.header-ios .toolbar {

    // .toolbar-background.toolbar-background-ios {
    //   // border-bottom-color: rgba(0, 0, 0, 0); var(--toolbar-border)-color
    //   border-bottom-width: 0 !important;
    // }
    // .toolbar-content.toolbar-content-ios {
    //   display: block;
    //   min-height: 44px;
    //   position: relative;
    //   max-width: calc(100vw - 90px);
    // }
    // .title.title-md {
    //   height: 44px;
    //   max-height: 44px;
    //   padding: 0;
    //   width: 100%;
    //   top: unset;
    // }
    ion-title {
      max-height: 52px;
      top: unset;
      bottom: 0;
      padding-left: 45px;
      padding-right: 45px;
    }

    &.toolbar-ios-blue,
    &.toolbar-ios-green,
    &.toolbar-ios-orange {

      button.back-button,
      ion-title.toolbar-title,
      .toolbar-title-md {
        color: white;
      }
    }

    .avatar-shadow {
      margin-top: -2px;
    }
  }

  ion-grid ion-row ion-col {
    ion-searchbar.searchbar {
      margin-bottom: 0;
      // background-color: transparent; var(--searchbar-ios-background)-color
      align-items: flex-start;
    }

    &:first-child:not(:last-child) ion-searchbar.searchbar {
      padding-right: 0;
    }
  }

  ion-searchbar.searchbar,
  ion-toolbar.toolbar {
    height: 40px;
    min-height: 40px;
  }

  // ion-toolbar.toolbar {
  //   .toolbar-content-md,
  //   ion-title.avatar-title {
  //     height: 44px;
  //   }
  // }
  button.filter-button {
    margin-top: -5px;
  }

  button[menutoggle="right"] ion-badge.badge.badge-md {
    position: absolute;
    right: -3px;
    top: -1px;
  }

  &::after {
    display: none;
  }

  &.header-md,
  &.header-ios {
    +ion-content.content-md:not(.external-page)>.fixed-content::before {
      left: 0;
      top: -5px;
      position: absolute;
      width: 100%;
      height: 5px;
      content: "";
      z-index: 9;
      box-shadow: 0 2px 2px 0px rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 4px 3px 0px rgba(0, 0, 0, 0.12);
    }
  }
}

ion-icon {
  &[md-name] {
    font-family: "Material Icons";
  }

  &.star-remove.ion-mat-star {
    position: relative;

    &::after {
      content: "\005c";
      position: absolute;
      top: 1.25px;
      left: -2px;
      width: 19px;
      height: 16px;
      font-family: Roboto;
      line-height: 16px;
      transform: rotate(-20deg);
      color: inherit;
      text-shadow: var(--white) 1.5px -1px;
    }
  }
}

ion-input {
  >input.text-input-md {
    overflow-y: visible;
    margin: 10px 8px;
    line-height: 25px;
  }
}

ion-item {
  &.item-md ion-radio.radio-md {

    &[item-left],
    &[item-start] {
      margin: 11px 14px 10px 4px;
    }
  }

  &.no-label ion-label.label.md {
    display: none;
  }

  &.item-datetime>ion-icon+.item-inner {
    margin-left: -8px !important;
  }

  &.item.item-md.item-checkbox ion-checkbox.checkbox-md {
    margin-right: 16px;
  }

  ion-label input {
    width: 100%;
    overflow: visible;
    height: 33px;
  }
}

ion-item-divider {
  ion-label.label-md {
    margin: 0;
    font-weight: 500;
  }
}

ion-list.list-md {
  &.detail-list ion-item.item-md {
    padding-left: 20px;
    padding-right: 12px;

    .item-inner,
    .input-wrapper {
      font-size: 1.4rem;
    }

    >ion-icon,
    .item-inner>ion-icon {
      font-size: 1.2em;
      line-height: 28px;
    }
  }

  .item-block {
    border-bottom: 1px solid #dedede;

    .item-inner {
      border-bottom: none !important;
    }
  }

  .item-input.item-input-has-focus {
    border-bottom: 2px solid var(--blue);

    &:not(:last-child) .item-inner {
      margin-left: -16px;
      padding-left: 16px;
      margin-bottom: -1px;
    }
  }

  &.white-borders {
    ion-item.item {
      border-bottom: 1px solid white;
    }
  }
}

ion-menu {
  ion-buttons:not([end])+.toolbar-content.toolbar-content-md {
    margin-right: 32px;
  }

  messaging,
  messages {
    height: 100%;
    width: 100%;
    display: block;
  }
}

ion-modal {
  &.smallModal {
    .modal-wrapper {
      position: absolute;
      top: auto;
      left: 0;
      right: 0;
      bottom: 0;
      height: 340px;
    }

    ion-backdrop {
      visibility: visible !important;
    }
  }
}

ion-navbar.toolbar {
  align-items: flex-end;

  button.bar-button.bar-button-md {
    margin: 5px 0.4rem;
  }

  // >.back-button {
  //   &.show-back-button {
  //     margin: 0 !important;
  //     padding: 0 !important;
  //     min-width: 32px;
  //   }
  // }
}

// ion-range.range-ios {
//   padding-top: 0; var(--range-ios-padding)-vertical
// }
.range-pin {
  // font-size: 1.2rem !important;
  font-weight: bold;
  letter-spacing: -0.25px;
  line-height: 30px !important;
  top: 0 !important;
  transform: none !important;
  z-index: 1;
}

.range-values {
  font-size: 1.2rem;
  font-weight: 500;
  min-height: 2em;

  span[item-start],
  span[item-end] {
    margin-bottom: 0;
    margin-top: 18px;
    font-weight: 700;
  }
}

ion-range {
  &.range-ios {
    .range-slider {
      height: 60px;
    }

    .range-bar {
      border-radius: 15px;
    }

    $knobSize: 30px;

    .range-knob-handle {
      top: calc(50% - #{$knobSize / 2});
      margin-top: 0;
      text-align: center;
      position: absolute;
      width: $knobSize;
      height: $knobSize;

      .range-pin,
      .range-knob {
        padding: 0;
        width: $knobSize;
        height: $knobSize;
        left: 0;
        top: 0;
      }
    }
  }
}

ion-searchbar.searchbar {
  display: flex;
  height: 49px;
  background-color: var(--grayLightest);
  margin-bottom: 12px;

  div.searchbar-search-icon {
    height: 29px;
    top: 0;
    background-position: center center;
  }

  &.searchbar-ios .searchbar-input {
    border-radius: 100px;
  }
}

ion-select {
  max-width: calc(100% - 24px);

  &[required].ng-valid button.item-cover {
    border-bottom: 2px solid #32db64;
  }

  &.select-md {
    padding: 13px 8px;
  }

  &.no-label>button.item-cover {
    margin-left: 16px;
    width: calc(100% - 16px);
  }
}

ion-slides {
  ion-slide.swiper-slide {
    width: 100% !important;
    max-width: 100% !important;
  }
}

ion-tabs {
  &.tabs-md {
    a.tab-button[aria-selected="true"] {
      opacity: 1 !important;
    }
  }

  &.app-tabs .tab-button-text {
    margin-top: 2px !important;
    font-size: 1rem;
  }
}

ion-toast {
  .toast-button {
    @extend .medium;
  }
}

.toolbar {
  .toolbar-title {
    text-align: center;
  }

  ion-avatar {
    width: 38px;
    height: 38px;

    img {
      border-radius: 50%;
      overflow: hidden;
      width: 34px !important;
      height: 34px !important;
    }
  }

  button.bar-button.bar-button-md,
  ion-buttons.bar-buttons button {
    margin: 7.5px 0.4rem !important;
    padding: 0 5px;
    max-height: 40px !important;

    &[icon-only] {
      max-width: 44px;
    }
  }

  ion-buttons.bar-buttons {
    display: flex;
    flex-direction: row;
    align-items: flex-end;
  }
}

// ------------------- NON-VARIABLE COMPONENT STYLING -----------
// blue50
.button-md-blue50 {
  color: var(--white);
  background-color: var(--blue50);

  &.activated {
    background-color: rgba(43, 116, 162, 0.54);
    opacity: 1;
  }
}

// grayLight
.list-header-md-grayLight {
  color: var(--black);
  background-color: var(--grayLight);
}

// primary (blue)
ion-navbar.toolbar-ios-primary>button.back-button ion-icon {
  color: var(--white);
}

// red
.button-md-red {
  color: var(--white);
  background-color: var(--red);

  &.activated {
    background-color: #ea2a64;
    opacity: 1;
  }
}

colleges-list,
tasks-list,
scholarships-list {
  >ion-content>.scroll-content {
    margin-bottom: 49px;
  }
}

// ------------------- MODEL-SPECIFIC STYLING -------------------
/* https://www.theiphonewiki.com/wiki/Models */
ion-nav {

  &.iPhone10-3,
  &.iPhone10-6 {
    ion-modal.smallModal .modal-wrapper {
      height: 370px;
    }

    .app-tabs>ion-tab>.ion-page {
      >ion-header {
        min-height: 96px !important;
      }

      >ion-header ion-navbar {
        min-height: 104px !important;
      }
    }
  }
}

// ------------------- LOGIN/REGISTER SHARED STYLING -------------------
// This ruleset won't be rendered on its own.
.button-md.button-default-md%externalButton {
  box-shadow: none;

  .button-inner {
    color: var(--blue);
  }
}

ion-content.external-page {

  /* element selectors */
  button {
    @extend %externalButton;
  }

  form {
    padding: 0 10px;
  }

  input {
    color: var(--white);
  }

  +ion-footer {
    button {
      min-height: 44px !important;
      @extend %externalButton;

      &.button-md {
        margin: 0;

        &:first-child:not(:last-child) {
          margin-bottom: 10px;
        }

        .button-inner {
          text-transform: none;
          font-weight: 700;
        }
      }
    }
  }

  ion-searchbar.searchbar div.searchbar-search-icon {
    height: 40px;
  }

  /* class selectors */
  .bg-white10 {
    height: 49px;
    padding: 1px !important;

    &:not(:last-child) {
      margin-bottom: 20px;
    }

    &.input-has-focus,
    &.searchbar-has-focus {
      border: 2px solid var(--white) !important;
      padding: 0 !important;

      ion-label {
        color: var(--white);
      }

      .searchbar-search-icon {
        opacity: 0.9;
      }
    }

    ion-icon {
      width: 30px;
    }

    input:-webkit-autofill {
      /* color = white10 over blue */
      -webkit-box-shadow: inset 0 0 0px 9999px #4a9dd1;
      -webkit-text-fill-color: var(--white) !important;
      box-shadow: inset 0 0 0px 9999px #4a9dd1;
      fill: var(--white) !important;
    }
  }

  .blue-divider {
    background-color: var(--white50);
    height: 3px;
    width: 75px;
    margin: 30px auto;
  }

  .border-white-bold {
    border: 1px solid var(--white) !important;
    box-shadow: var(--white) 0 0 0 1px;
  }

  .border-white50 {
    border: 1px solid var(--white50) !important;
  }

  .external-header {
    font-size: 2.4rem;

    +.body {
      margin-top: 6px;
    }
  }

  // .fixed-content::before {
  //   content: none;
  //   display: none;
  // }
  .form-icon {
    height: 49px;
    width: 49px !important;
    padding: 15px;
  }

  .nte-logo {
    height: 129px;
    width: 129px;
  }

  .text-input:-ms-input-placeholder {
    color: var(--white50);
  }

  .text-input::-moz-placeholder {
    color: var(--white50);
  }

  .text-input::-webkit-input-placeholder {
    color: var(--white50);
  }

  .validation-error {
    @extend .text-red;
    @extend .bg-white;
    @extend .tinyText;
    @extend .bold;
    line-height: 14px;
    padding-left: 4px;
    margin-bottom: -2px;

    &.hidden {
      @extend .text-blue;
      @extend .bg-blue;
    }
  }
}

// ======== Rounded inputs ===========
// ion-item.item.item-block.item-md.item-select.item-label-floating {
//   height: 100%;
// }
// ion-grid ion-col ion-select {
//   height: 41px;
// }
// ion-item.item-input,
// ion-item.item-input .item-inner {
//   padding: 0 !important;
// }
// ion-item.item-input ion-input,
// ion-item.item-select {
//   border: 1px solid rgba(72, 72, 72, 0.5);
//   border-radius: 36px;
//   padding-top: 12px;
//   margin-top: -12px;
//   padding-left: 20px;
//   max-width: 100%;
// }
// ion-item.item-input.item-label-floating ion-label[floating] {
//   background-color: white;
//   padding: 6px;
//   margin: -6px -6px -6px 16px;
//   align-self: flex-start;
// }
// ion-item.item-input .input-wrapper {
//   max-width: 100%;
//   flex: 0 1 100%;
// }
